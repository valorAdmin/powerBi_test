expression member_info_entity =
		let
		    Source = Odbc.Query("dsn=prod-recruitment-db", "SELECT unique_member_id, phone_number_verification_flag#(lf)#(tab)FROM public.member_info_entity")
		in
		    Source
	lineageTag: e83a57e5-519b-4a15-a824-2fbbef96b6ae

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

expression successful_bvn_validation =
		let
		    Source = MySQL.Database("34.159.134.5", "bulkbana_verification", [ReturnSingleDatabase=true, Query="select * from bulkbana_verification.bvn_verified_success;"]),
		    #"Filtered Rows1" = Table.SelectRows(Source, each ([unique_member_id] <> "")),
		    #"Filtered Rows" = Table.SelectRows(#"Filtered Rows1", each [created_at] > #datetime(2024, 12, 31, 0, 0, 0)),
		    #"Removed Duplicates" = Table.Distinct(#"Filtered Rows", {"unique_member_id"})
		in
		    #"Removed Duplicates"
	lineageTag: c50e3abf-7951-427f-9de3-3a4539594f88

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

expression member_generated_rf_entity =
		let
		    Source = Odbc.Query("dsn=portfolio-db", "SELECT rf_id, rf_type, rf_status, staff_id_created, staff_id_solved, staff_id_verified, hub_id, ik_number, unique_member_id, reopen_flag, date_logged, date_solved, date_verified, comment_created, comment_solved, comment_verified, app_version, imei, contact_person, contact_method, created_at, updated_at, image_name, system_risk_level, user_risk_level, log_entity_id, solve_entity_id, category, solve_method, red_flag_id, presence_flag#(lf)#(tab)FROM public.member_generated_rf_entity where red_flag_id in('rf_0206','rf_0205','rf_0216','rf_0223','rf_0207','rf_0224')")
		in
		    Source
	lineageTag: 3e714b5d-35fb-441b-933f-2aa134e7af5d

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

expression ofo_clearance =
		let
		    Source = Odbc.Query("dsn=prod-recruitment-db", "SELECT unique_member_id FROM public.clearance_members where delete_flag=0 ;#(lf)")
		in
		    Source
	lineageTag: 118a10d7-4cda-4b76-b4dd-0889d64349e0

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

expression clearance =
		let
		    Source = Odbc.Query("dsn=recruitment-db", "SELECT ik_number,clearance_date,tge_approval_flag, bgo_approval_flag, tge_approval_date, bgo_approval_date, tge_rejection_reason, bgo_rejection_reason, hub_id,approval_tge_type FROM public.clearance_tgs where delete_flag=0")
		in
		    Source
	lineageTag: 8eced305-85ae-40b4-96c9-1d364c2fea06

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

expression 'id card error' =
		let
		    Source = Odbc.Query("dsn=portfolio-db", "SELECT rf_id, rf_type, rf_status, staff_id_created, staff_id_solved, staff_id_verified, hub_id, ik_number, unique_member_id, reopen_flag, date_logged, date_solved, date_verified, comment_created, comment_solved, comment_verified, app_version, imei, contact_person, contact_method, created_at, updated_at, image_name, system_risk_level, user_risk_level, log_entity_id, solve_entity_id, category, solve_method, red_flag_id, presence_flag#(lf)#(tab)FROM public.member_generated_rf_entity where red_flag_id in('rf_0224') and rf_status=0"),
		    #"Grouped Rows" = Table.Group(Source, {"ik_number"}, {{"members with bad id card error", each Table.RowCount(_), Int64.Type}})
		in
		    #"Grouped Rows"
	lineageTag: 961e4251-1d49-49f9-9321-9934f5c79f03

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

expression tgl_ID_card_validation =
		let
		    Source = members_entity,
		    #"Filtered Rows" = Table.SelectRows(Source, each ([role] = "Leader")),
		    #"Removed Other Columns" = Table.SelectColumns(#"Filtered Rows",{"ik_number", "id_card_flag"}),
		    #"Added Conditional Column" = Table.AddColumn(#"Removed Other Columns", "ID Validation", each if [id_card_flag] = null then "No" else if [id_card_flag] = "1" then "Yes" else "No")
		in
		    #"Added Conditional Column"
	lineageTag: a04b11a4-a6fb-4cc9-8f29-4ccb6b91ea1b

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

expression 'bad clearance videos' =
		let
		    Source = Odbc.Query("dsn=portfolio-db", "SELECT rf_id, rf_type, rf_status, staff_id_created, staff_id_solved, staff_id_updated, hub_id, ik_number, reopen_flag, contact_person, contact_method, date_logged, date_solved, date_updated, comment_created, comment_solved, comment_updated, app_version, imei, create_at, updated_at, system_risk_level, user_risk_level, log_entity_id, solve_entity_id, category, solve_method, red_flag_id, presence_flag#(lf)#(tab)FROM public.trust_group_generated_rf_entity where red_flag_id='rf_0236' and rf_status=0")
		in
		    Source
	lineageTag: 79e0e2a6-deb5-4cff-aa91-aa8edf7bcd34

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

expression 'TGs in Good Standing' =
		let
		    Source = Excel.Workbook(Web.Contents("https://sheet.zohopublic.com/sheet/published/6ufrdd6acf31c639e47ebb37e2715584e9724?download=xlsx"), null, true),
		    Sheet1_Sheet = Source{[Item="Sheet1",Kind="Sheet"]}[Data],
		    #"Promoted Headers" = Table.PromoteHeaders(Sheet1_Sheet, [PromoteAllScalars=true]),
		    #"Changed Type" = Table.TransformColumnTypes(#"Promoted Headers",{{"TG IK Number", type text}, {"2024 Status", type text}, {"2025 Status", type text}, {"Met Contractual", type text}, {"Bags Cleared", Int64.Type}, {"Recommended for Exit", type text}})
		in
		    #"Changed Type"
	lineageTag: ff4dc85b-c3e1-4b64-83f9-cb211231ae23

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

expression 'Store Hectare Size' =
		let
		    Source = Excel.Workbook(Web.Contents("https://sheet.zohopublic.com/sheet/published/q3f9v2d68f9ef981547a893ba48c116e1b755?download=xlsx"), null, true),
		    #"ID Location Correct_Sheet" = Source{[Item="ID Location Correct",Kind="Sheet"]}[Data],
		    #"Promoted Headers" = Table.PromoteHeaders(#"ID Location Correct_Sheet", [PromoteAllScalars=true]),
		    #"Changed Type" = Table.TransformColumnTypes(#"Promoted Headers",{{"Hub", type text}, {"ID Location", type text}, {"Est. Ha", Int64.Type}, {"Total Ha", Int64.Type}, {"% to Ha", type number}, {"SM15C 12.5kg Need", type number}, {"SM15F 25kg Ha Distribution ", type number}, {"SM51C 25kg Ha Distribution ", type number}, {"SM51F 25kg Ha Distribution ", type number}}),
		    #"Renamed Columns" = Table.RenameColumns(#"Changed Type",{{"ID Location", "Store"}, {"Est. Ha", "Ha"}}),
		    #"Uppercased Text" = Table.TransformColumns(#"Renamed Columns",{{"Store", Text.Upper, type text}}),
		    #"Removed Other Columns" = Table.SelectColumns(#"Uppercased Text",{"Store", "Ha", "SM15C 12.5kg Need", "SM15F 25kg Ha Distribution ", "SM51C 25kg Ha Distribution ", "SM51F 25kg Ha Distribution "}),
		    #"Replaced Value" = Table.ReplaceValue(#"Removed Other Columns",null,0,Replacer.ReplaceValue,{"SM15F 25kg Ha Distribution "}),
		    #"Replaced Value1" = Table.ReplaceValue(#"Replaced Value",null,0,Replacer.ReplaceValue,{"SM51C 25kg Ha Distribution "}),
		    #"Replaced Value2" = Table.ReplaceValue(#"Replaced Value1",null,0,Replacer.ReplaceValue,{"SM51F 25kg Ha Distribution "})
		in
		    #"Replaced Value2"
	lineageTag: 73975177-f2d0-4748-a97c-0c903390b43a
	queryGroup: LML

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

expression 'Inventory (Structured) (2)' =
		let
		    Source = GoogleBigQuery.Database(),
		    #"babbangona-prod" = Source{[Name="babbangona-prod"]}[Data],
		    odoo_data_Schema = #"babbangona-prod"{[Name="odoo_data",Kind="Schema"]}[Data],
		    inventory_reports_Table = odoo_data_Schema{[Name="inventory_reports",Kind="Table"]}[Data],
		    #"Filtered Rows" = Table.SelectRows(inventory_reports_Table, each ([product] = "[P1001532003] Herbicide_Nicoshield_1L" or [product] = "[P1001536003] Herbicide_Terazine_1L" or [product] = "[P4038110065] Empty Sack_Empty Sack_100kg" or [product] = "[P4039111013] Needle_Needle_Pieces" or [product] = "[P4045136013] Thread_Thread_Pieces" or [product] = "[P5052144063] Urea_Indorama_50kg" or [product] = "[P5052145063] Urea_Notore_50kg" or [product] = "[P5140485063] NPS+ 14:31:00:2.63S:1Zn:0.2B_50kg" or [product] = "[P8072183010] Maize Seed_SM15C_12.5kg_Assembly_Bag" or [product] = "[P8072574010] Maize Seed_Sammaz 51_12.5kg_Bag" or [product] = "[P8072575010] Maize Seed_Sammaz 15_12.5kg_Bag")),
		    #"Duplicated Column" = Table.DuplicateColumn(#"Filtered Rows", "location", "location - Copy"),
		    #"Split Column by Delimiter" = Table.SplitColumn(#"Duplicated Column", "location - Copy", Splitter.SplitTextByDelimiter("/", QuoteStyle.Csv), {"location - Copy.1", "location - Copy.2", "location - Copy.3"}),
		    #"Changed Type" = Table.TransformColumnTypes(#"Split Column by Delimiter",{{"location - Copy.1", type text}, {"location - Copy.2", type text}, {"location - Copy.3", type text}}),
		    #"Renamed Columns" = Table.RenameColumns(#"Changed Type",{{"location - Copy.1", "Hub"}, {"location - Copy.3", "ID Location"}}),
		    #"Filtered Rows1" = Table.SelectRows(#"Renamed Columns", each ([ID Location] <> null)),
		    #"Removed Columns" = Table.RemoveColumns(#"Filtered Rows1",{"location - Copy.2"}),
		    #"Filtered Rows2" = Table.SelectRows(#"Removed Columns", each ([Hub] = "Funtua" or [Hub] = "Garba Chede" or [Hub] = "Giwa" or [Hub] = "Igabi" or [Hub] = "Ikara" or [Hub] = "Karaye" or [Hub] = "Lere" or [Hub] = "Soba" or [Hub] = "Toro")),
		    #"Removed Columns1" = Table.RemoveColumns(#"Filtered Rows2",{"id"}),
		    #"Uppercased Text" = Table.TransformColumns(#"Removed Columns1",{{"ID Location", Text.Upper, type text}}),
		    #"Merged Queries" = Table.NestedJoin(#"Uppercased Text", {"ID Location"}, #"Store Location", {"Supporting Warehouses"}, "ID Location.1", JoinKind.LeftOuter),
		    #"Expanded ID Location.1" = Table.ExpandTableColumn(#"Merged Queries", "ID Location.1", {"ID Warehouses"}, {"ID Location.1.ID Warehouses"}),
		    #"Filtered Rows3" = Table.SelectRows(#"Expanded ID Location.1", each ([ID Location.1.ID Warehouses] <> null)),
		    #"Removed Other Columns" = Table.SelectColumns(#"Filtered Rows3",{"product", "available_quantity", "Hub", "ID Location.1.ID Warehouses"}),
		    #"Renamed Columns1" = Table.RenameColumns(#"Removed Other Columns",{{"ID Location.1.ID Warehouses", "ID Location"}}),
		    #"Merged Queries1" = Table.NestedJoin(#"Renamed Columns1", {"ID Location"}, #"Store Hectare Size", {"Store"}, "Store Hectare Size", JoinKind.LeftOuter),
		    #"Expanded Store Hectare Size" = Table.ExpandTableColumn(#"Merged Queries1", "Store Hectare Size", {"HA"}, {"HA"}),
		    #"Replaced Value11" = Table.ReplaceValue(#"Expanded Store Hectare Size","[P5052144063] Urea_Indorama_50kg","Total Urea (50kg)",Replacer.ReplaceText,{"product"}),
		    #"Replaced Value" = Table.ReplaceValue(#"Replaced Value11","[P5140485063] NPS+ 14:31:00:2.63S:1Zn:0.2B_50kg","NPS (50kg)",Replacer.ReplaceText,{"product"}),
		    #"Replaced Value1" = Table.ReplaceValue(#"Replaced Value","[P4045136013] Thread_Thread_Pieces","Thread (Pieces)",Replacer.ReplaceText,{"product"}),
		    #"Replaced Value2" = Table.ReplaceValue(#"Replaced Value1","[P1001536003] Herbicide_Terazine_1L","Herbicide Terazine (1L)",Replacer.ReplaceText,{"product"}),
		    #"Replaced Value3" = Table.ReplaceValue(#"Replaced Value2","[P4039111013] Needle_Needle_Pieces","Needle (Pieces)",Replacer.ReplaceText,{"product"}),
		    #"Replaced Value4" = Table.ReplaceValue(#"Replaced Value3","[P4038110065] Empty Sack_Empty Sack_100kg","Empty Sack (100kg)",Replacer.ReplaceText,{"product"}),
		    #"Replaced Value5" = Table.ReplaceValue(#"Replaced Value4","[P5052145063] Urea_Notore_50kg","Total Urea (50kg)",Replacer.ReplaceText,{"product"}),
		    #"Replaced Value6" = Table.ReplaceValue(#"Replaced Value5","[P1001532003] Herbicide_Nicoshield_1L","Herbicide Nicoshield (1L)",Replacer.ReplaceText,{"product"}),
		    #"Replaced Value7" = Table.ReplaceValue(#"Replaced Value6","[P8072183010] Maize Seed_SM15C_12.5kg_Assembly_Bag","Maize Seed SM15C (12.5kg)",Replacer.ReplaceText,{"product"}),
		    #"Replaced Value8" = Table.ReplaceValue(#"Replaced Value7","[P8072575010] Maize Seed_Sammaz 15_12.5kg_Bag","Maize Seed Sammaz 15 (12.5kg)",Replacer.ReplaceText,{"product"}),
		    #"Replaced Value9" = Table.ReplaceValue(#"Replaced Value8","[P8072574010] Maize Seed_Sammaz 51_12.5kg_Bag","Maize Seed Sammaz 51 (12.5kg)",Replacer.ReplaceText,{"product"}),
		    #"Grouped Rows" = Table.Group(#"Replaced Value9", {"Hub", "ID Location", "product"}, {{"available_quantity", each List.Sum([available_quantity]), type nullable number}, {"HA", each List.Max([HA]), type nullable number}})
		in
		    #"Grouped Rows"
	lineageTag: cfb8a2d3-ee51-4225-8a57-27a5b8f5ef11
	queryGroup: LML

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

expression 'Store Location' =
		let
		    Source = Excel.Workbook(Web.Contents("https://sheet.zohopublic.com/sheet/published/q3f9v2d68f9ef981547a893ba48c116e1b755?download=xlsx"), null, true),
		    #"ID Location_Sheet" = Source{[Item="ID Location",Kind="Sheet"]}[Data],
		    #"Changed Type" = Table.TransformColumnTypes(#"ID Location_Sheet",{{"Column1", type text}, {"Column2", type text}, {"Column3", type text}}),
		    #"Promoted Headers" = Table.PromoteHeaders(#"Changed Type", [PromoteAllScalars=true]),
		    #"Changed Type1" = Table.TransformColumnTypes(#"Promoted Headers",{{"Hub", type text}, {"Supporting Warehouses", type text}, {"ID Warehouses", type text}})
		in
		    #"Changed Type1"
	lineageTag: 03813eff-628b-4f7f-8574-50fc5eea186d
	queryGroup: LML

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

expression failed_bvn_validation =
		let
		    Source = MySQL.Database("34.159.134.5", "bulkbana_verification", [ReturnSingleDatabase=true, Query="select * from bulkbana_verification.bvn_verified_failed;"]),
		    #"Filtered Rows1" = Table.SelectRows(Source, each ([unique_member_id] <> "")),
		    #"Filtered Rows" = Table.SelectRows(#"Filtered Rows1", each [created_at] > #datetime(2024, 12, 31, 0, 0, 0)),
		    #"Removed Duplicates" = Table.Distinct(#"Filtered Rows", {"unique_member_id"})
		in
		    #"Removed Duplicates"
	lineageTag: da62a831-c58d-418c-ad00-d028d5f5591a

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

expression bvn_name_validation =
		let
		    Source = MySQL.Database("34.159.134.5", "bulkbana_verification", [ReturnSingleDatabase=true, Query="select * from bulkbana_verification.bvn_name_verified where status=1;"]),
		    #"Filtered Rows1" = Table.SelectRows(Source, each ([unique_member_id] <> "")),
		    #"Removed Duplicates" = Table.Distinct(#"Filtered Rows1", {"unique_member_id"})
		in
		    #"Removed Duplicates"
	lineageTag: 9c1a57b9-be58-44e1-bbd2-00f9cce07490

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

expression bvn_details =
		let
		    Source = MySQL.Database("34.159.134.5", "bulkbana_verification", [ReturnSingleDatabase=true, Query="select * from bulkbana_verification.bvn_details;"]),
		    #"Filtered Rows1" = Table.SelectRows(Source, each ([unique_member_id] <> "")),
		    #"Filtered Rows" = Table.SelectRows(#"Filtered Rows1", each [created_at] > #datetime(2024, 12, 31, 0, 0, 0)),
		    #"Removed Duplicates" = Table.Distinct(#"Filtered Rows", {"unique_member_id"})
		in
		    #"Removed Duplicates"
	lineageTag: fb14478f-c88f-407a-8845-ce420f8c6cbf

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

expression 'Current TGL List' =
		let
		    Source = Odbc.Query("dsn=prod-recruitment-db", "SELECT unique_member_id, ik_number,role FROM public.members_entity  #(lf)where enrollment_flag='1' and deactivate_flag='0' and enrollment_date>'2024-12-31' and role ='Leader'#(lf)"),
		    #"Removed Duplicates" = Table.Distinct(Source, {"ik_number"})
		in
		    #"Removed Duplicates"
	lineageTag: 77b09f49-c8a9-4cab-85b7-125d31cef130
	queryGroup: 'BVN Check'

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

expression 'Last year TGL List' =
		let
		    Source = Odbc.Query("dsn=recruitment-db-backup-2024", "SELECT unique_member_id, ik_number,role FROM public.members_entity  #(lf)where enrollment_flag='1' and deactivate_flag='0' and role ='Leader'#(lf)"),
		    #"Removed Duplicates" = Table.Distinct(Source, {"ik_number"})
		in
		    #"Removed Duplicates"
	lineageTag: 97e419ab-50a3-4e55-980c-f80968eb8a1f
	queryGroup: 'BVN Check'

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

